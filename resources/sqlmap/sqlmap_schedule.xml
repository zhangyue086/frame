<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Schedule">
	<resultMap type="com.zline.zlogistics.biz.dal.entity.Schedule" id="scheduleResult" >
		<id property="scheduleId" column="scheduleId"/>
		<result property="distributionStationId" column="distributionStationId"/>
		<result property="scheduleName" column="scheduleName"/>
		<result property="scheduleStart" column="scheduleStart"/>
		<result property="scheduleEnd" column="scheduleEnd"/>
		<result property="createTime" column="createTime"/>
		<result property="createId" column="createId"/>
		<result property="lastUpdateTime" column="lastUpdateTime"/>
		<result property="lastUpdateId" column="lastUpdateId"/>
		<result property="isDeleted" column="isDeleted"/>
	</resultMap>
	
	<resultMap type="com.zline.zlogistics.biz.dal.entity.ShiftSchedule" id="ShiftScheduleResult" >
		<result property="scheduleName" column="scheduleName"/>
		<result property="scheduleId" column="scheduleId"/>
		<result property="scheduleDate" column="scheduleDate"/>
		<result property="cityName" column="cityName"/>
		<result property="distributionStationName" column="distributionStationName"/>
		<result property="distributionStationId" column="distributionStationId"/>
		<result property="distributionMemberNames" column="distributionMemberNames"/>
	</resultMap>

	<insert id="save" parameterType="com.zline.zlogistics.biz.dal.entity.Schedule"
		useGeneratedKeys="true" keyProperty="scheduleId">
		insert into zlogistics.schedule(
			distribution_station_id,
			schedule_name,
			schedule_start,
			schedule_end,
			create_time,
			create_id,
			last_update_time,
			last_update_id
		)values(
			#{distributionStationId},
			#{scheduleName},
			#{scheduleStart},
			#{scheduleEnd},
			now(),
			0,
			now(),
			0
		)
	</insert>
	
	<update id="update" parameterType="com.zline.zlogistics.biz.dal.entity.Schedule">
		update zlogistics.schedule
		<trim prefix="set" prefixOverrides=",">
		    <if test="scheduleName != null">
				schedule_name = #{scheduleName}
			</if>
			<if test="scheduleStart != null">
				,schedule_start = #{scheduleStart}
			</if>
			<if test="scheduleEnd != null">
				,schedule_end = #{scheduleEnd}
			</if>
			<if test="isDeleted != null">
				,is_deleted = #{isDeleted}
			</if>
		</trim>
		where schedule_id = #{scheduleId}
	</update>
	
	<select id="queryList" parameterType="com.zline.zlogistics.biz.dal.entity.Schedule" 
		resultMap="scheduleResult">
		select 
			schedule_id as scheduleId,
			distribution_station_id as distributionStationId,
			schedule_name as scheduleName,
			schedule_start as scheduleStart,
			schedule_end as scheduleEnd,
			create_time as createTime,
			create_id as createId,
			last_update_time as lastUpdateTime,
			last_update_id as lastUpdateId
		from zlogistics.schedule 
		<trim prefix="where" prefixOverrides="and\or">
			is_deleted = 0
			<if test="distributionStationId != null">
				and distribution_station_id = #{distributionStationId}
			</if>
		</trim>
	</select>
	
	<select id="findById" parameterType="long" 
		resultMap="scheduleResult"> 
		select 
			schedule_id as scheduleId,
			distribution_station_id as distributionStationId,
			schedule_name as scheduleName,
			schedule_start as scheduleStart,
			schedule_end as scheduleEnd,
			create_time as createTime,
			create_id as createId,
			last_update_time as lastUpdateTime,
			last_update_id as lastUpdateId
		from zlogistics.schedule
		where is_deleted = 0 and schedule_id = #{scheduleId}
	</select>
	
	<select id="queryScheduleForMember" parameterType="com.zline.zlogistics.biz.dal.entity.MemberSchedule" 
		resultMap="scheduleResult">
		SELECT
			t2.schedule_id as scheduleId,
			t2.schedule_name as scheduleName
		FROM
			zlogistics.member_schedule t1
		JOIN zlogistics.`schedule` t2 ON t1.schedule_id = t2.schedule_id
		WHERE
			t1.distribution_member_id = #{distributionMemberId}
		AND t1.schedule_date = #{scheduleDate}
	</select>
</mapper>