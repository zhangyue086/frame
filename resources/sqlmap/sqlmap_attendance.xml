<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Attendance">
	<resultMap type="com.zline.zlogistics.biz.dal.entity.Attendance" id="attendanceResult" >
		<id property="attendanceId" column="attendanceId"/>
		<result property="distributionMemberId" column="distributionMemberId"/>
		<result property="scheduleId" column="scheduleId"/>
		<result property="attendanceDate" column="attendanceDate"/>
		<result property="startWorkTime" column="startWorkTime"/>
		<result property="endWorkTime" column="workType"/>
		<result property="createTime" column="createTime"/>
		<result property="createId" column="createId"/>
		<result property="lastUpdateTime" column="lastUpdateTime"/>
		<result property="lastUpdateId" column="lastUpdateId"/>
		<result property="isDeleted" column="isDeleted"/>
	</resultMap>
	<resultMap type="com.zline.zlogistics.biz.dal.entity.AttendanceInfo" id="attendanceInfoResult" >
		<result property="distributionMemberName" column="distributionMemberName"/>
		<result property="attendanceDate" column="attendanceDate"/>
		<result property="distributionStationName" column="distributionStationName"/>
		<result property="lateTime" column="lateTime"/>
		<result property="earlyTime" column="earlyTime"/>
		<result property="leaveInfoMask" column="leaveInfoMask"/>
		<result property="overTime" column="overTime"/>
		<result property="scheduleName" column="scheduleName"/>
		<result property="startWorkTime" column="startWorkTime"/>
		<result property="endWorkTime" column="endWorkTime"/>
	</resultMap>
	
	<insert id="save" parameterType="com.zline.zlogistics.biz.dal.entity.Attendance"
		useGeneratedKeys="true" keyProperty="attendanceId">
		insert into zlogistics.attendance(
			distribution_member_id,
			schedule_id,
			attendance_date,
			start_work_time,
			end_work_time,
			create_time,
			create_id,
			last_update_time,
			last_update_id
		)values(
			#{distributionMemberId},
			#{scheduleId},
			#{attendanceDate},
			#{startWorkTime},
			#{endWorkTime},
			now(),
			0,
			now(),
			0
		)
	</insert>
	
	<update id="update" parameterType="com.zline.zlogistics.biz.dal.entity.Attendance">
		update zlogistics.attendance
		<trim prefix="set" prefixOverrides=",">
			<if test="isDeleted != null">
				is_deleted = #{isDeleted}
			</if>
			<if test="endWorkTime != null">
				,end_work_time = #{endWorkTime}
			</if>
		</trim>
		where attendance_id = #{attendanceId}
	</update>
	
	<select id="queryList" parameterType="com.zline.zlogistics.biz.dal.entity.Attendance" 
		resultMap="attendanceResult">
		select 
			attendance_id as attendanceId,
			distribution_member_id as distributionMemberId,
			schedule_id as scheduleId,
			attendance_date as attendanceDate,
			start_work_time as startWorkTime,
			end_work_time as endWorkTime,
			create_time as createTime,
			create_id as createId,
			last_update_time as lastUpdateTime,
			last_update_id as lastUpdateId
		from zlogistics.attendance 
		<trim prefix="where" prefixOverrides="and\or">
			is_deleted = 0
			<if test="distributionMemberId != null">
				and distribution_member_id = #{distributionMemberId}
			</if>
			<if test="attendanceDate != null and attendanceDate != ''">
				and attendance_date = #{attendanceDate}
			</if>
			<if test="scheduleId != null">
				and schedule_id = #{scheduleId}
			</if>
		</trim>
		<if test="firstRow != null">
		limit #{firstRow},#{pageRows}
		</if>
	</select>
	
	<select id="queryListCount" parameterType="com.zline.zlogistics.biz.dal.entity.Attendance" 
		resultType="int">
		select 
			count(*)
		from zlogistics.attendance 
		<trim prefix="where" prefixOverrides="and\or">
			is_deleted = 0
			<if test="distributionMemberId != null">
				and distribution_member_id = #{distributionMemberId}
			</if>
			<if test="attendanceDate != null and attendanceDate != ''">
				and attendance_date = #{attendanceDate}
			</if>
			<if test="scheduleId != null">
				and schedule_id = #{scheduleId}
			</if>
		</trim>
	</select>
	
	<select id="findById" parameterType="long" 
		resultMap="attendanceResult"> 
		select 
			attendance_id as attendanceId,
			distribution_member_id as distributionMemberId,
			schedule_id as scheduleId,
			attendance_date as attendanceDate,
			start_work_time as startWorkTime,
			end_work_time as endWorkTime,
			create_time as createTime,
			create_id as createId,
			last_update_time as lastUpdateTime,
			last_update_id as lastUpdateId
		from zlogistics.attendance 
		where is_deleted = 0 and attendance_id = #{attendanceId}
	</select>
	
	<select id="queryAttendanceInfo" parameterType="com.zline.zlogistics.biz.dal.entity.AttendanceInfo" resultMap="attendanceInfoResult">
		select 
			t2.attendance_date as attendanceDate,
			t3.distribution_station_name as distributionStationName,
			t1.distribution_member_name as distributionMemberName,
			IFNULL(t5.schedule_name,'加班') as scheduleName,
			t2.start_work_time as startWorkTime,
			t2.end_work_time as endWorkTime,
			TIME_TO_SEC(timediff(str_to_date(t2.start_work_time,'%H:%i'),str_to_date(t5.schedule_start,'%H:%i')))/60 as lateTime,
			TIME_TO_SEC(timediff(str_to_date(t5.schedule_end,'%H:%i'),str_to_date(t2.end_work_time,'%H:%i')))/60 as earlyTime,
			t4.leave_info_mask as leaveInfoMask,
			TIME_TO_SEC(timediff(str_to_date(t2.end_work_time,'%H:%i'),str_to_date(t2.start_work_time,'%H:%i')))/60 as overTime
		from 
			zlogistics.distribution_member t1
		join zlogistics.attendance t2
			on t1.distribution_member_id = t2.distribution_member_id
		join zlogistics.distribution_station t3
			on t1.distribution_station_id = t3.distribution_station_id
		left join zlogistics.leave_info t4
			on t1.distribution_member_id = t4.distribution_member_id
		left join zlogistics.`schedule` t5
			on t2.schedule_id = t5.schedule_id
		<trim prefix="where" prefixOverrides="and\or">
			t1.is_deleted = 0
			<if test="distributionStationId != null">
				and t3.distribution_station_id = #{distributionStationId}
			</if>
			<if test="distributionMemberId != null">
				and t1.distribution_member_id = #{distributionMemberId}
			</if>
			<if test="attendanceDate != null and attendanceDate != ''">
				and t2.attendance_date = #{attendanceDate}
			</if>
		</trim>
		<if test="firstRow != null">
		limit #{firstRow},#{pageRows}
		</if>
	</select>
	
	<select id="queryAttendanceInfoCount" parameterType="com.zline.zlogistics.biz.dal.entity.AttendanceInfo" resultType="int">
		select 
			count(*)
		from 
			zlogistics.distribution_member t1
		join zlogistics.attendance t2
			on t1.distribution_member_id = t2.distribution_member_id
		join zlogistics.distribution_station t3
			on t1.distribution_station_id = t3.distribution_station_id
		left join zlogistics.leave_info t4
			on t1.distribution_member_id = t4.distribution_member_id
		left join zlogistics.`schedule` t5
			on t2.schedule_id = t5.schedule_id
		<trim prefix="where" prefixOverrides="and\or">
			t1.is_deleted = 0
			<if test="distributionStationId != null">
				and t3.distribution_station_id = #{distributionStationId}
			</if>
			<if test="distributionMemberId != null">
				and t1.distribution_member_id = #{distributionMemberId}
			</if>
			<if test="attendanceDate != null and attendanceDate != ''">
				and t2.attendance_date = #{attendanceDate}
			</if>
		</trim>
	</select>
</mapper>